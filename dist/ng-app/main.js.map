{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/main-nav/main-nav.component.html","webpack:///./src/app/main-nav/main-nav.component.scss","webpack:///./src/app/main-nav/main-nav.component.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/posts/post/post.component.html","webpack:///./src/app/posts/post/post.component.scss","webpack:///./src/app/posts/post/post.component.ts","webpack:///./src/app/posts/posts.component.html","webpack:///./src/app/posts/posts.component.scss","webpack:///./src/app/posts/posts.component.ts","webpack:///./src/app/shared/post.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-posts></app-posts>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ng-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PostComponent } from './posts/post/post.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { MaterialModule } from './material/material.module';\nimport { PostService } from './shared/post.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CKEditorModule } from 'ng2-ckeditor';\nimport { MainNavComponent } from './main-nav/main-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule } from '@angular/material';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostsComponent,\n    MainNavComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    CKEditorModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule\n  ],\n  providers: [PostService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer\\n      class=\\\"sidenav\\\"\\n      fixedInViewport=\\\"false\\\"\\n      [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n      [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n      [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar>Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item href=\\\"#\\\">Link 1</a>\\n      <a mat-list-item href=\\\"#\\\">Link 2</a>\\n      <a mat-list-item href=\\\"#\\\">Link 3</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>ng-app</span>\\n    </mat-toolbar>\\n    <ng-content></ng-content>\\n    <!-- Add Content Here -->\\n  </mat-sidenav-content>\\n\\n</mat-sidenav-container>\\n\"","module.exports = \".sidenav-container {\\n  height: 100%; }\\n\\n.sidenav {\\n  width: 200px; }\\n\\n.sidenav .mat-toolbar {\\n  background: inherit; }\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1; }\\n\\n.spacer {\\n  flex: 1 1 auto; }\\n\\n.hidden {\\n  display: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wcmFpL3ByYWthc2gtdGVjaGxvZy9wcmFrYXNoLXRlY2hsb2ctYXBwL3NyYy9hcHAvbWFpbi1uYXYvbWFpbi1uYXYuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFZLEVBQ2I7O0FBRUQ7RUFDRSxhQUFZLEVBQ2I7O0FBRUQ7RUFDRSxvQkFBbUIsRUFDcEI7O0FBRUQ7RUFDRSx5QkFBZ0I7RUFBaEIsaUJBQWdCO0VBQ2hCLE9BQU07RUFDTixXQUFVLEVBQ1g7O0FBRUQ7RUFDRSxlQUFjLEVBQ2Y7O0FBVUQ7RUFDRSxjQUFhLEVBQ2QiLCJmaWxlIjoic3JjL2FwcC9tYWluLW5hdi9tYWluLW5hdi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaWRlbmF2LWNvbnRhaW5lciB7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnNpZGVuYXYge1xuICB3aWR0aDogMjAwcHg7XG59XG5cbi5zaWRlbmF2IC5tYXQtdG9vbGJhciB7XG4gIGJhY2tncm91bmQ6IGluaGVyaXQ7XG59XG5cbi5tYXQtdG9vbGJhci5tYXQtcHJpbWFyeSB7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbiAgei1pbmRleDogMTtcbn1cblxuLnNwYWNlciB7XG4gIGZsZXg6IDEgMSBhdXRvO1xufVxuXG5cblxuLy8gQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KXtcbi8vICAgLnNpZGVuYXYge1xuLy8gICAgIGRpc3BsYXk6IG5vbmU7XG4vLyAgIH1cbi8vIH1cblxuLmhpZGRlbntcbiAgZGlzcGxheTogbm9uZTtcbn1cbiJdfQ== */\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.scss'],\n})\nexport class MainNavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as Material from \"@angular/material\";\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    Material.MatToolbarModule,\n    Material.MatGridListModule,\n    Material.MatFormFieldModule,\n    Material.MatInputModule,\n    Material.MatRadioModule,\n    Material.MatNativeDateModule,\n    Material.MatDatepickerModule,\n    Material.MatButtonModule,\n    Material.MatCheckboxModule\n  ],\n  exports: [\n    Material.MatToolbarModule,\n    Material.MatGridListModule,\n    Material.MatFormFieldModule,\n    Material.MatInputModule,\n    Material.MatRadioModule,\n    Material.MatNativeDateModule,\n    Material.MatDatepickerModule,\n    Material.MatButtonModule,\n    Material.MatCheckboxModule\n  ]\n})\nexport class MaterialModule { }\n","module.exports = \"<!-- <form [formGroup]=\\\"_service.form\\\" class=\\\"normal-form\\\">\\n    <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"800px\\\">\\n        <mat-grid-tile>\\n          <div class=\\\"controllers-container\\\">\\n            <input type=\\\"hidden\\\" formControlName=\\\"$key\\\"/>\\n            <mat-form-field>\\n              <input formControlName=\\\"title\\\" matInput placeholder=\\\"Title*\\\"/>\\n              <mat-error>Title is mandatory.</mat-error>\\n            </mat-form-field>\\n            <mat-form-field>\\n              <input formControlName=\\\"author\\\" matInput placeholder=\\\"Author\\\"/>\\n            </mat-form-field>\\n            <mat-form-field>\\n              <input formControlName=\\\"description\\\" matInput placeholder=\\\"Post*\\\" class=\\\"ck-editor\\\"/>\\n              <textarea ck-editor></textarea>\\n              <mat-error>Post is mandatory.</mat-error>\\n            </mat-form-field>\\n            <mat-form-field>\\n                <mat-checkbox matInput formControlName=\\\"publish\\\">Disabled</mat-checkbox>\\n            </mat-form-field>\\n            <mat-form-field>\\n              <input formControlName=\\\"dateCreated\\\" matInput placeholder=\\\"Date Created\\\"/>\\n            </mat-form-field>\\n            <mat-form-field>\\n              <input formControlName=\\\"tags\\\" matInput placeholder=\\\"tags\\\"/>\\n             </mat-form-field>\\n             <mat-form-field>\\n                <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker></mat-datepicker>\\n             </mat-form-field>\\n\\n\\n             <div class=\\\"button-row\\\">\\n                <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"_service.form.invalid\\\">Submit</button>\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onClear()\\\" type=\\\"button\\\">Clear</button>\\n             </div>\\n          </div>\\n        </mat-grid-tile>\\n\\n        <mat-grid-tile>\\n          <div class=\\\"controllers-container\\\">\\n            <div class=\\\"add-bottom-padding\\\"></div>\\n          </div>\\n        </mat-grid-tile>\\n      </mat-grid-list>\\n</form> -->\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL3Bvc3QvcG9zdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { PostService } from '../../shared/post.service';\nimport { $ } from 'protractor';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss']\n})\nexport class PostComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  onClear(){\n    // this._service.form.reset();\n    // this._service.initializeFormGroup();\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n    <app-main-nav>\\n        <mat-toolbar>\\n            <span class=\\\"fill-remaining-space\\\"></span>\\n            <span>Angular material</span>\\n            <span class=\\\"fill-remaining-space\\\"></span>\\n          </mat-toolbar>\\n\\n          <app-post></app-post>\\n    </app-main-nav>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL3Bvc3RzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.scss']\n})\nexport class PostsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup, FormControl, Validator, Validators } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  constructor() { }\n\n  form: FormGroup = new FormGroup({\n    $key: new FormControl(null),\n    title: new FormControl('', Validators.required),\n    author: new FormControl(''),\n    description: new FormControl('', Validators.required),\n    publish: new FormControl('1'),\n    dateCreated: new FormControl(''),\n    tags: new FormControl('')\n  });\n\n  initializeFormGroup() {\n    console.log('Reset form.........');\n    this.form.setValue({\n      $key: null,\n      title: '',\n      author: '',\n      description: '',\n      publish: '',\n      dateCreated: '',\n      tags: ''\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}